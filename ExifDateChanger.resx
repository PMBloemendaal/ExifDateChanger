<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QgghWsz/Bz1jfLGTa+taAAAAAElFTkSuQmCC
</value>
  </data>
</root>